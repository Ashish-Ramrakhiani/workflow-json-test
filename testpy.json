{
    "ComputeServers": {
        "My_GitHub_Account": {
            "FaaSType": "GitHubActions",
            "UserName": "nolcut",
            "ActionRepoName": "FaaSr-py-test",
            "Branch": "main",
            "Token": "My_GitHub_Account_TOKEN"
        },
        "My_Lambda_Account": {
            "FaaSType": "Lambda",
            "Region": "us-east-1",
            "AccessKey": "My_Lambda_Account_ACCESS_KEY",
            "SecretKey": "My_Lambda_Account_SECRET_KEY"
        },
        "My_OW_Account": {
            "FaaSType": "OpenWhisk",
            "Namespace": "guest",
            "Endpoint": "ow.faasr.io:31002",
            "API.key": "My_OW_Account_API_KEY"
        }
    },
    "DataStores": {
        "My_Minio_Bucket": {
            "Endpoint": "https://play.min.io",
            "Bucket": "faasr-test",
            "Region": "us-east-1",
            "Writable": "TRUE",
            "AccessKey": "Q3AM3UQ867SPQQA43P2F",
            "SecretKey": "zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG"           
        }
    },
    "FunctionList": {
        "rank_test": {
            "FunctionName": "rank_test",
            "FaaSServer": "My_GitHub_Account",
            "Arguments": {
            },
            "Rank": "10/20",
            "InvokeNext": [
                "delete",
                "log",
                "add_operation"
        ]
        },
        "add_operation": {
            "FunctionName": "add_rpc",
            "FaaSServer": "My_GitHub_Account",
            "Type": "Python",
            "Arguments": {
                "folder": "testadd",
                "num1": 400,
                "num2": 100,
                "output": "add_result_500.txt"
            },
            "InvokeNext": ["r_func"]
        },
        "r_func": {
            "FunctionName": "r_log",
            "FaaSServer": "My_GitHub_Account",
            "Type": "R",
            "Arguments": {
                "message": "testing testing testing"
            },
            "InvokeNext": [
                {"True": "log",
                "False": "delete"}
            ]
        },
        "delete": {
            "FunctionName": "print_and_delete",
            "FaaSServer": "My_GitHub_Account",
            "Arguments": {
                "folder": "testadd",
                "filename": "result42.txt"
            },
            "InvokeNext": "log"
        },
        "log": {
          "FunctionName": "test_log",
          "FaaSServer": "My_GitHub_Account",
          "Arguments": {
            "message": "added and deleted complete"
          },
          "InvokeNext": "folders"
        },
        "folders": {
          "FunctionName": "test_list_folders",
          "FaaSServer": "My_OW_Account",
          "Arguments": {},
          "InvokeNext": [
            
          ]
        }
    },
    "ActionContainers": {
        "rank_test": "ghcr.io/nolcut/github-actions-python:0.1.3",
        "r_log": "ghcr.io/nolcut/github-actions-python:0.1.3",
        "delete": "ghcr.io/nolcut/github-actions-python:0.1.3",
        "add_operation": "145342739029.dkr.ecr.us-east-1.amazonaws.com/aws-lambda-py:0.1.2",
        "log": "ghcr.io/nolcut/github-actions-python:0.1.3",
        "folders": "nolcut/ow-faasr-image:0.1.0"
    },

    "PyPIPackagesDownloads": {
        "add_rpc": ["random2"]
    },

    "PackageImports": {
        "add_rpc": ["random2", "rich"]
    },
    "FunctionGitHubPackage": {
        "add_rpc": ["Textualize/rich.git"]
    },
    "FunctionGitRepo": {
        "add": "nolcut/test-py",
        "r_log": "nolcut/test-py",
        "rank_test": "nolcut/test-py",
        "add_rpc": "nolcut/test-py",
        "print_and_delete": "nolcut/test-py",
        "test_log": "nolcut/test-py",
        "test_list_folders": "nolcut/test-py"
    },
    "FunctionInvoke": "add_operation",
    "InvocationID": "",
    "FaaSrLog": "FaaSrLog",
    "LoggingDataStore": "My_Minio_Bucket",
    "DefaultDataStore": "My_Minio_Bucket"
}
